目标

认识常用类型：int、long long、double、bool、size_t
会用 printf 打印它们
要点小抄

int：常用整数
long long：更大的整数
double：小数
bool：布尔（需要 #include <stdbool.h>，值为 0 或 1）
size_t：表示“大小/长度”，打印用 %zu
常用占位符：%d(int)、%lld(long long)、%f(double)、%.2f(保留2位小数)、%d(bool)、%zu(size_t)

输入输出（推荐用法）

printf 常用占位符
%d int，%u unsigned int
%ld/%lld long/long long
%f double（可用 %.2f 控制小数位）
%c 字符，%s 字符串
%p 指针地址，%zu 打印 size_t
例：printf("age=%d, pi=%.2f, name=%s\n", 23, 3.1415, "Alice");

表达式（算对和不踩坑）

算术：+ - * / %（整数除法会丢小数，7/2 = 3）
比较：== != < > <= >=（结果是 0 或 1）
逻辑：&& || !（有短路特性）
自增：i++、++i（不要在一个表达式里多次改同一变量）
转换：(double)a/b 能得到小数
小例子：int a=7,b=2; double r=(double)a/b; // r=3.5



#include <stdio.h>
#include <stdint.h>
#include <stdbool.h>

int main(void) {
    // 展示不同类型的字节数
    printf("int=%zu, long long=%zu, double=%zu, bool=%zu, size_t=%zu\n",
           sizeof(int), sizeof(long long), sizeof(double), sizeof(bool), sizeof(size_t));

    // 按格式输出
    int age = 20;
    long long population = 1400000000LL;
    double pi = 3.1415926;
    bool ok = 1; // 1 表示真，0 表示假

    printf("age=%d, population=%lld, pi=%.2f, ok=%d\n",
           age, population, pi, ok);

    return 0;
}
